kind: pipeline
name: default

steps:
## builds and pushes to hub.docker.com, the docker repo is just private right now.
# - name: docker build
#   image: plugins/docker
#   settings:
#     username:
#       from_secret: docker_username
#     password:
#       from_secret: docker_password
#     repo: nelsonenzo/tmux-appimage
#     tags: ${DRONE_COMMIT}

- name: create release on github
  image: nelsonenzo/tmux-appimage:692f3cf549ebbb95b5111845dc9f92a202e8d9a8
  environment:
    FILE: /opt/releases/tmux-3.0a-x86_64.AppImage
    GITHUB_TOKEN:
      from_secret: personal_access_token
  commands:
    - |
      cat > github.json <<- EOM
      {
      "tag_name": "${DRONE_REPO_BRANCH}",
      "target_commitish": "${DRONE_REPO_BRANCH}",
      "name": "Tmux AppImage $RELEASE_TAG ${DRONE_REPO_BRANCH}",
      "body": "Appimage release for branch ${DRONE_REPO_BRANCH}",
      "draft": true,
      "prerelease": true
      }
      EOM
    - echo $(cat github.json)
    - |
      curl -X POST -d @github.json \
      -H "Authorization: token ${GITHUB_TOKEN}" \
      https://api.github.com/repos/nelsonenzo/tmux-appimage/releases > githubresponse.txt
    - echo $(cat githubresponse.txt)
    - export GITHUB_RELEASE_ID=$(jq .id githubresponse.txt)
    - echo $GITHUB_RELEASE_ID
    - |
      curl -H "Authorization: token $GITHUB_TOKEN" \
      -H "Content-Type: $(file -b --mime-type $FILE)" \
      --data-binary @$FILE \
      "https://uploads.github.com/repos/nelsonenzo/tmux-appimage/releases/$GITHUB_RELEASE_ID/assets?name=$(basename $FILE)"
